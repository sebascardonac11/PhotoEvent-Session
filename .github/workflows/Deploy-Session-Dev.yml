name: Deploy Session Development
on:
  push:
    branches:
    - feature/putPhotos
jobs:
  Infra:
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: https://d3ri3uhvzvztpt.cloudfront.net/
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: CloudFormation
        run: |
            aws cloudformation create-stack --stack-name PhotoEvents-Session --capabilities CAPABILITY_NAMED_IAM --template-body file://./infraSession.yml \
            --parameters \
            ParameterKey=LambdaFuncName,ParameterValue='photoEvent-lambda-session' \
            ParameterKey=DynamoDBTableName,ParameterValue='photoEvent-Dynamo-session' \
            ParameterKey=APIName,ParameterValue='photoEvent-session' \
            ParameterKey=ApiPathName,ParameterValue='API-photoEvent-session' \
            ParameterKey=APIDesc,ParameterValue='Api disenada para los servicios de sesiones.' \
            ParameterKey=CognitoARN,ParameterValue='arn:aws:cognito-idp:us-west-2:547749462802:userpool/us-west-2_VCd4MZ9X8' \
            ParameterKey=EnvironmentName,ParameterValue='QA' > stackID.md
      - name: STACK ID
        run: |
          echo "::set-output name=stackID::$(head -1 stackID.md)"
          echo "steps.CloudFormation.outputs"
      - name: Complete STACK
        run: |
          echo '::warning:: This is a warning message, to demonstrate that commands are being processed.'
          stopMarker=$(uuidgen)
          echo "::stop-commands::$stopMarker"
          echo '::warning:: This will NOT be rendered as a warning, because stop-commands has been invoked.'
          echo "::$stopMarker::"
          echo '::warning:: This is a warning again, because stop-commands has been turned off.'
  deployment:
    needs: Infra
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: https://d3ri3uhvzvztpt.cloudfront.net/
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Build
        run: |
          npm install
      - name: Deploy
        run: |
          zip -r deploy.zip ./
          aws lambda update-function-code \
            --function-name ${{ secrets.LAMBDAFUNCNAME }} \
            --zip-fil "fileb://./deploy.zip" \
            --region ${{ secrets.AWS_REGION }} \